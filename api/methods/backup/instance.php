<?php$route = '/questions/';$app->get($route, function ()  use ($app){	$ReturnObject = array();	if(isset($_REQUEST['query'])){ $query = $_REQUEST['query']; } else { $query = '';}				if($query=='')		{		$Query = "SELECT * FROM question WHERE title LIKE '%" . $query . "%' OR details LIKE '%" . $query . "%'";		}	else 		{		$Query = "SELECT * FROM question";				}			$Query .= " ORDER BY type,title ASC";	//echo $Query . "<br />";		$QuestionResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Question = mysql_fetch_assoc($QuestionResult))		{								$question_id = $Question['question_id'];			$title = $Question['title'];		$details = $Question['details'];		$type = $Question['type'];				// manipulation zone										$F = array();		$F['question_id'] = $question_id;		$F['title'] = $title;		$F['details'] = $details;		$F['type'] = $type;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));			});$route = '/questions/';	$app->post($route, function () use ($app){ 	$request = $app->request();  	$param = $request->params();					if(isset($param['title'])){ $title = $param['title']; } else { $title = ''; }	if(isset($param['details'])){ $details = $param['details']; } else { $details = ''; }	if(isset($param['type'])){ $type = $param['type']; } else { $type = ''; }			  	$LinkQuery = "SELECT * FROM question WHERE title = '" . $title . "'";	//echo $LinkQuery . "<br />";	$LinkResult = mysql_query($LinkQuery) or die('Query failed: ' . mysql_error());		if($LinkResult && mysql_num_rows($LinkResult))		{			$Link = mysql_fetch_assoc($LinkResult);					$question_id = $Link['question_id'];					$ReturnObject = array();														$ReturnObject['message'] = "Question Already Exists!";					$ReturnObject['question_id'] = $question_id;					}	else 		{									$query = "INSERT INTO question(";							if(isset($title)){ $query .= "title,"; } 		if(isset($details)){ $query .= "details,"; }		if(isset($type)){ $query .= "type,"; }				$query .= "closing";				$query .= ") VALUES(";						if(isset($title)){ $query .= "'" . mysql_real_escape_string($title) . "',"; } 		if(isset($details)){ $query .= "'" . mysql_real_escape_string($details) . "',"; }		if(isset($type)){ $query .= "'" . mysql_real_escape_string($type) . "',"; }  				$query .= "'nothing'";				$query .= ")";				//echo $query . "<br />";		mysql_query($query) or die('Query failed: ' . mysql_error());		$question_id = mysql_insert_id();				$ReturnObject = array();														$ReturnObject['message'] = "Question Term Added";		$ReturnObject['question_id'] = $question_id;								}		$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));					});$route = '/questions/:question_id/';$app->get($route, function ($question_id)  use ($app){	$ReturnObject = array();			$Query = "SELECT * FROM question WHERE question_id = " . $question_id;	//echo $Query . "<br />";		$QuestionResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Question = mysql_fetch_assoc($QuestionResult))		{					$question_id = $Question['question_id'];			$title = $Question['title'];		$details = $Question['details'];		$type = $Question['type'];				// manipulation zone										$F = array();		$F['question_id'] = $question_id;		$F['title'] = $title;		$F['details'] = $details;		$F['type'] = $type;				$ReturnObject = $F;		}		$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});	$route = '/questions/:question_id/';$app->put($route, function ($question_id) use ($app){	 	$request = $app->request();  	$param = $request->params();			if(isset($param['title'])){ $title = $param['title']; } else { $title = ''; }	if(isset($param['details'])){ $details = $param['details']; } else { $details = ''; }	if(isset($param['type'])){ $type = $param['type']; } else { $type = ''; }				  	$LinkQuery = "SELECT * FROM question WHERE question_id = " . $question_id;	//echo $LinkQuery . "<br />";	$LinkResult = mysql_query($LinkQuery) or die('Query failed: ' . mysql_error());		if($LinkResult && mysql_num_rows($LinkResult))		{			$query = "UPDATE question SET ";		if(isset($title))			{			$query .= "title='" . mysql_real_escape_string($title) . "'"; 			} 		if(isset($details))			{			$query .= ",details='" . mysql_real_escape_string($details) . "'"; 			} 			if(isset($type))			{			$query .= ",type='" . mysql_real_escape_string($type) . "'"; 			} 							$query .= " WHERE question_id = " . $question_id;				//echo $query . "<br />";		mysql_query($query) or die('Query failed: ' . mysql_error());				$ReturnObject = array();														$ReturnObject['message'] = "Question Updated!";		$ReturnObject['question_id'] = $question_id;										}	else 		{			$Link = mysql_fetch_assoc($LinkResult);						$ReturnObject = array();														$ReturnObject['message'] = "Question Doesn't Exist!";					$ReturnObject['question_id'] = $question_id;					}			$app->response()->header("Content-Type", "application/json");	echo stripslashes(format_json(json_encode($ReturnObject)));				});	$route = '/questions/:question_id/';$app->delete($route, function ($question_id) use ($app){		$ReturnObject = array();	$query = "DELETE FROM question WHERE question_id = " . $question_id;	//echo $query . "<br />";	mysql_query($query) or die('Query failed: ' . mysql_error());		$ReturnObject = array();													$ReturnObject['message'] = "Question Deleted!";				$ReturnObject['question_id'] = $question_id;		$app->response()->header("Content-Type", "application/json");	echo stripslashes(format_json(json_encode($ReturnObject)));		});		//// Begin tags//			$route = '/questions/tags/';$app->get($route, function ()  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();		$Query = "SELECT t.tag_id, t.tag, count(*) AS Profile_Count from tags t";	$Query .= " INNER JOIN question_tag_pivot ctp ON t.tag_id = ctp.tag_id";	$Query .= " GROUP BY t.tag ORDER BY count(*) DESC";	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$tag_id = $Database['tag_id'];		$tag = $Database['tag'];		$profile_count = $Database['Profile_Count'];		$F = array();		$F['tag_id'] = $tag_id;		$F['tag'] = $tag;		$F['profile_count'] = $profile_count;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});		$route = '/questions/tags/:tag';$app->delete($route, function ($tag)  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();		$Query = "SELECT t.tag_id, t.tag FROM tags WHERE tag = '" . trim(mysql_real_escape_string($tag)) . "'";	$tagResult = mysql_query($LinkQuery) or die('Query failed: ' . mysql_error());			if($tagResult && mysql_num_rows($tagResult))		{			$tag = mysql_fetch_assoc($tagResult);		$tag_id = $tag['tag_id'];		$tag_Text = $tag['tag'];		$DeleteQuery = "DELETE FROM question_tag_pivot WHERE tag_id = " . $tag_id;		$DeleteResult = mysql_query($DeleteQuery) or die('Query failed: ' . mysql_error());					$DeleteQuery = "DELETE FROM tags WHERE tag = '" . trim(mysql_real_escape_string($tag)) . "'";		$DeleteResult = mysql_query($DeleteQuery) or die('Query failed: ' . mysql_error());					$F = array();		$F['tag_id'] = $tag_id;		$F['tag'] = $tag_Text;		$F['profile_count'] = 0;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});	$route = '/questions/:question_id/tags/';$app->get($route, function ($question_id)  use ($app){	$ReturnObject = array();			$Query = "SELECT t.tag_id, t.tag, count(*) AS Profile_Count from tags t";	$Query .= " JOIN question_tag_pivot ptp ON t.tag_id = ptp.tag_id";	$Query .= " WHERE ptp.question_id = " . $question_id;	$Query .= " GROUP BY t.tag ORDER BY count(*) DESC";	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$tag_id = $Database['tag_id'];		$tag = $Database['tag'];		$question_count = $Database['Profile_Count'];		$F = array();		$F['tag_id'] = $tag_id;		$F['tag'] = $tag;		$F['question_count'] = $question_count;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});			$route = '/questions/:question_id/tags/';$app->post($route, function ($question_id)  use ($app){	$ReturnObject = array();		 	$request = $app->request();  	$param = $request->params();			if(isset($param['tag']))		{		$tag = trim(mysql_real_escape_string($param['tag']));					$ChecktagQuery = "SELECT tag_id FROM tags where tag = '" . $tag . "'";		$ChecktagResults = mysql_query($ChecktagQuery) or die('Query failed: ' . mysql_error());				if($ChecktagResults && mysql_num_rows($ChecktagResults))			{			$tag = mysql_fetch_assoc($ChecktagResults);					$tag_id = $tag['tag_id'];			}		else			{			$query = "INSERT INTO tags(tag) VALUES('" . $tag . "'); ";			mysql_query($query) or die('Query failed: ' . mysql_error());				$tag_id = mysql_insert_id();						}		$ChecktagPivotQuery = "SELECT * FROM question_tag_pivot where tag_id = " . trim($tag_id) . " AND question_id = " . $question_id;		$ChecktagPivotResult = mysql_query($ChecktagPivotQuery) or die('Query failed: ' . mysql_error());				if($ChecktagPivotResult && mysql_num_rows($ChecktagPivotResult))			{			$ChecktagPivot = mysql_fetch_assoc($ChecktagPivotResult);					}		else			{			$query = "INSERT INTO question_tag_pivot(tag_id,question_id) VALUES(" . $tag_id . "," . $question_id . "); ";			mysql_query($query) or die('Query failed: ' . mysql_error());								}		$F = array();		$F['tag_id'] = $tag_id;		$F['tag'] = $tag;		$F['question_count'] = 0;				array_push($ReturnObject, $F);		}				$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});		$route = '/questions/:question_id/tags/:tag';$app->delete($route, function ($question_id,$tag)  use ($app){	$ReturnObject = array();		 	$request = $app->request();  	$param = $request->params();			if(isset($tag))		{					$tag = trim(mysql_real_escape_string($tag));					$ChecktagQuery = "SELECT tag_id FROM tags where tag = '" . $tag . "'";		$ChecktagResults = mysql_query($ChecktagQuery) or die('Query failed: ' . mysql_error());				if($ChecktagResults && mysql_num_rows($ChecktagResults))			{			$tag = mysql_fetch_assoc($ChecktagResults);					$tag_id = $tag['tag_id'];			$DeleteQuery = "DELETE FROM question_tag_pivot WHERE tag_id = " . trim($tag_id) . " AND question_id = " . trim($question_id);			$DeleteResult = mysql_query($DeleteQuery) or die('Query failed: ' . mysql_error());			}		$F = array();		$F['tag_id'] = $tag_id;		$F['tag'] = $tag;		$F['profile_count'] = 0;				array_push($ReturnObject, $F);		}				$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});			//// End tags//	//// Ask//	$route = '/questions/:question_id/ask/organization/';$app->get($route, function ($question_id)  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$param = $request->params();		 	$appid = $param['appid'];	$appkey = $param['appkey'];		if(isset($param['organization_id'])){ $organization_id = $param['organization_id']; } else { $organization_id = 0;}		$answer = false;							// Is There an APIs.json = OR NOT OF THIS IS POSSIBLE!!						// ------------	// APIs.json			// ------------					//20 - Is there a blog RSS feed?	if($question_id==20)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Blog RSS")				{				$answer = true;				}						} 					}				//19 - Is there a blog?	if($question_id==19)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Blog")				{				$answer = true;				}						} 					}					//42 - Is there a change log?	if($question_id==42)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/buildingblocks/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$name = $Object['name'];				if($name=="Changelog")				{				$answer = true;				}				if($name=="Change Log")				{				$answer = true;				}									} 					// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Changelog")				{				$answer = true;				}				if($type=="Change Log")				{				$answer = true;				}									} 											}			//35 - Is there a forum?	if($question_id==35)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/buildingblocks/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$name = $Object['name'];			if($name=="Forum")				{				$answer = true;				}						} 					}					//38 - Is there a Github account?	if($question_id==38)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Github")				{				$answer = true;				}						} 					}				//34 - Is there a knowledge base?	if($question_id==34)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Knowledgebase")				{				$answer = true;				}						} 					}			//37 - Is there a LinkedIn account?	if($question_id==37)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="LinkedIn")				{				$answer = true;				}						} 					}				//22 - Is there a platform description?		//21 - Is there a portal?	if($question_id==21)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Developer")				{				$answer = true;				}						} 					}				//39 - Is there a pricing page?	if($question_id==39)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Pricing")				{				$answer = true;				}						} 					}			//45 - Is there a privacy policy?	if($question_id==45)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Privacy Policy")				{				$answer = true;				}						} 					}					//40 - Is there a rate limit page?	if($question_id==40)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Rate Limit")				{				$answer = true;				}						} 					}				//41 - Is there a road map?	if($question_id==41)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Roadmap")				{				$answer = true;				}						} 					}				//43 - Is there a status page?	if($question_id==43)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Status Page")				{				$answer = true;				}				if($type=="Status Dashboard")				{				$answer = true;				}									} 					}				//44 - Is there a terms of service?	if($question_id==44)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Terms of Service")				{				$answer = true;				}						} 					}				//36 - Is there a Twitter account?	if($question_id==36)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Twitter")				{				$answer = true;				}						} 					}				//17 - Is there an API?		//18 - Is there an APIs.json File?	if($question_id==18)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="APIs.json")				{				$answer = true;				}						} 					}				//26 - Is there an authentication overview?	if($question_id==26)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Authentication")				{				$answer = true;				}						} 					}		//33 - Is there an FAQ section?	if($question_id==33)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="FAQ")				{				$answer = true;				}						} 					}				//30 - Is there code libraries?  substr?		//29 - Is there code samples?		//24 - Is there documentation for the API?	if($question_id==24)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Documentation")				{				$answer = true;				}						} 					}				//32 - Is there email for support?	if($question_id==32)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Email")				{				$answer = true;				}						} 					}				//23 - Is there getting started information?	if($question_id==23)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Getting Started")				{				$answer = true;				}						} 					}				//25 - Is there interactive documentation for the API?	if($question_id==25)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Swagger UI")				{				$answer = true;				}				if($type=="Apiary")				{				$answer = true;				}				if($type=="Interactive Documentation")				{				$answer = true;				}												} 					}				//28 - Is there request for access?	if($question_id==28)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Request Access")				{				$answer = true;				}						} 					}			//31 - Is there SDKs?		//27 - Is there self-service registration?		if($question_id==27)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Self-Service Registration")				{				$answer = true;				}						} 					}				//46 - Is there a Swagger definition?	if($question_id==46)		{		// Organization have Blog RSS URL		$requestURL = "https://organization.api.kinlane.com:443/organization/" . $organization_id . "/urls/?appid=" . $appid . "&appkey=" . $appkey;			//echo $requestURL . "<br />";				$http = curl_init();  		curl_setopt($http, CURLOPT_URL, $requestURL);  		curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);   				curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);				$output = curl_exec($http);		$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);		$info = curl_getinfo($http);				//var_dump($output);			$Objects = json_decode($output,true);				//var_dump($Objects);				foreach($Objects as $Object)			{			$type = $Object['type'];			if($type=="Swagger" || $type=="Swagger-Original")				{				$answer = true;				}						} 					}					// ------------	// SWAGGER Questions		// ------------			//46 - Is there a Swagger definition?	if($question_id==46)		{					}																	$ReturnObject['type'] = 'organization';				$ReturnObject['organization_id'] = $organization_id;	$ReturnObject['question_id'] = $question_id;	$ReturnObject['answer'] = $answer;	$app->response()->header("Content-Type", "application/json");	echo stripslashes(format_json(json_encode($ReturnObject)));		});		$route = '/questions/:question_id/ask/apisjson/';$app->get($route, function ($question_id)  use ($app){	$ReturnObject = array();	if(isset($_REQUEST['url'])){ $url = $_REQUEST['$url']; }				$ReturnObject['type'] = 'apisjson';				$ReturnObject['url'] = $url;	$app->response()->header("Content-Type", "application/json");	echo stripslashes(format_json(json_encode($ReturnObject)));		});		$route = '/questions/:question_id/ask/twitter/';$app->get($route, function ($question_id)  use ($app){	$ReturnObject = array();	if(isset($_REQUEST['url'])){ $url = $_REQUEST['$url']; }				$ReturnObject['type'] = 'twitter';				$ReturnObject['url'] = $url;	$app->response()->header("Content-Type", "application/json");	echo stripslashes(format_json(json_encode($ReturnObject)));		});		$route = '/questions/:question_id/ask/github/';$app->get($route, function ($question_id)  use ($app){	$ReturnObject = array();	if(isset($_REQUEST['url'])){ $url = $_REQUEST['$url']; }				$ReturnObject['type'] = 'github';			$ReturnObject['url'] = $url;	$app->response()->header("Content-Type", "application/json");	echo stripslashes(format_json(json_encode($ReturnObject)));		});				?>